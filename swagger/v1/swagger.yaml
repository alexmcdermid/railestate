openapi: 3.0.1
info:
  title: Railestate API
  version: "1.0.0"
  description: API documentation for Railestate.
servers:
  - url: https://railestate.herokuapp.com
paths:
  /api/v1/listings:
    get:
      summary: Retrieve all listings
      description: Returns a JSON array of all listing objects.
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: A list of listings.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Listing'
        "401":
          description: Unauthorized – API token missing or invalid.
  /users/{id}/generate_token:
    post:
      summary: Generate a new API token for the user
      description: Generates and returns a new API token for the specified user.
      parameters:
        - name: id
          in: path
          description: The ID of the user for whom to generate a token.
          required: true
          schema:
            type: integer
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: A new API token was generated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiToken'
        "401":
          description: Unauthorized – API token missing or invalid.
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: >
        Provide your API token in the header using the format:
        `Authorization: Token <your_api_token>`
  schemas:
    Listing:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Beautiful House"
        address:
          type: string
          example: "123 Main St, Anytown, USA"
        image_url:
          type: string
          format: uri
          example: "https://s3.amazonaws.com/your-bucket/image.png"
        price:
          type: number
          format: float
          example: 350000.0
        buy_or_rent:
          type: boolean
          example: true
        description:
          type: string
          example: "A lovely three-bedroom house."
        created_at:
          type: string
          format: date-time
          example: "2025-01-01T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-02-01T12:00:00Z"
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          example: "user@example.com"
        full_name:
          type: string
          example: "John Doe"
        avatar_url:
          type: string
          format: uri
          example: "https://example.com/avatar.png"
        provider:
          type: string
          example: "google_oauth2"
        uid:
          type: string
          example: "1234567890"
        created_at:
          type: string
          format: date-time
          example: "2025-01-01T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-02-01T12:00:00Z"
    ApiToken:
      type: object
      properties:
        token:
          type: string
          description: The newly generated API token.
          example: "a1b2c3d4e5f6"
